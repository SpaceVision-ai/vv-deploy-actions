name: deploy to edge device

on:
  workflow_call:
    inputs:
      user:
        description: edge device username
        required: true
        type: string
      code-name:
        description: code module name
        required: true
        type: string
      deploy-branch: 
        description: branch to be deployed
        default: main
        required: false
        type: string
      parent-dir:
        description: code directory of the edge device
        required: true
        type: string
      version-file-name:
        description: _version_.py or .version
        required: true
        type: string
      exclude-files-from-zip:
        description: files that you want to delete from zip
        required: false
        type: string
      slack-channel:
        description: after deploy & install, send message to this slack channle
        required: true
        type: string
    secrets:
      password:
        description: edge device password
        required: true
      otp:
        description: edge device otp
        required: true

jobs:
  deploy-and-install:
    name: deploy-and-install
    runs-on: self-hosted
    steps:
      - name: Checkout the deploy-target repository
        uses: actions/checkout@v2

      - name: Checkout the action repository
        uses: actions/checkout@v2
        with:
          repository: teamdable/vv-deploy-actions
          path: action/

      - name: Install python packages for api call
        run: |
          python -m pip install --upgrade pip
          pip install -r action/requirements.txt

      - name: Get VPN IP of deploy-target devices
        run: | 
          action/get-vpn-ip

      - name: Build
        run: |
          suffix="$(date '+%Y-%m-%d_%H:%M:%S')"
          zip_file_name="${{ inputs.code-name }}-${suffix}.zip"
          echo "ZIP_FILE_NAME=$zip_file_name" >> $GITHUB_ENV

          git archive --format=zip ${{ inputs.deploy-branch }} -o $zip_file_name
          zip --delete $zip_file_name ".github/*" ".gitignore"
          if [[ -e ${{ inputs.exclude-files-from-zip }} ]]; then zip --delete $zip_file_name ${{ inputs.exclude-files-from-zip }}; fi

      - name: Deploy & Install
        run: |
          echo ${{ secrets.password }} | sudo -S apt-get install expect oathtool -y
          action/deploy-to-edge-devices.sh ${{ inputs.user }} ${{ secrets.password }} ${{ secrets.otp }} ${{ env.ZIP_FILE_NAME }} ${{ inputs.parent-dir }} ${{ inputs.code-name }} ${{ inputs.version-file-name }} ${{ inputs.slack-channel }}